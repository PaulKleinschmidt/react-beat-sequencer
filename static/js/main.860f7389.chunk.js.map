{"version":3,"sources":["Square.js","synths.js","Mute.js","App.js","serviceWorker.js","index.js"],"names":["Square","state","active","activate","bind","this","props","instrumentIsSelected","setState","onActivate","type","index","isOnCurrentBeat","isBeginningOfMeasure","muted","className","style","height","width","boxSizing","border","transform","boxShadow","backgroundColor","transition","margin","cursor","onClick","React","Component","reverb","Tone","JCReverb","delayTime","wet","connect","Master","delay","FeedbackDelay","kickSynth","MembraneSynth","toMaster","snareSynth","Synth","volume","oscillator","modulationType","harmonicity","envelope","attack","decay","sustain","release","percSynth","chain","value","whiteNoise","NoiseSynth","noise","hatSynth","MetalSynth","modulationIndex","resonance","bassSynth","MonoSynth","filter","Q","filterEnvelope","baseFrequency","octaves","exponent","pluckSynth","PolySynth","Mute","onMuteClick","flash","marginRight","borderRadius","padding","App","instruments","drums","kicks","Array","fill","snares","hats","perc","bass","c1","c2","c3","c4","synth","c5","c6","currentBeat","selectedInstrument","mutedTracks","onActivateSquare","loopBeat","Loop","time","includes","triggerAttackRelease","Transport","bpm","start","context","resume","instrumentStateCopy","JSON","parse","stringify","updatedState","instrument","Object","assign","splice","indexOf","push","color","textAlign","paddingRight","paddingBottom","display","flexDirection","justifyContent","alignItems","minHeight","paddingLeft","keys","map","sound","pads","_drum","updateSelectedInstrument","textDecoration","fontWeight","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.860f7389.chunk.js","sourcesContent":["import React from 'react';\nimport './Square.css';\n\nexport class Square extends React.Component {\n  constructor() {\n    super()\n    this.state={\n      active: false\n    }\n    this.activate = this.activate.bind(this)\n  }\n\n  activate() {\n    if (this.props.instrumentIsSelected) {\n      this.setState({active: !this.state.active})\n      this.props.onActivate(this.props.type, this.props.index)\n    }\n  }\n\n  render() {\n    const { active } = this.state\n    const { instrumentIsSelected, isOnCurrentBeat, isBeginningOfMeasure, muted } = this.props\n\n    return (\n      <div\n        className=\"square\"\n        style={{\n          height: instrumentIsSelected ? '40px' : '10px',\n          width: '40px',\n          boxSizing: 'border-box',\n          border:\n            !instrumentIsSelected ? isOnCurrentBeat && active ? '2px solid white' : '' : !muted &&\n            isOnCurrentBeat && active ? '2px solid orange' :\n            active ? '3px solid red' : '3px solid white',\n          transform: isOnCurrentBeat && active && !muted ? \"rotateZ(-2deg)\" : \"\",\n          boxShadow: active && instrumentIsSelected ? '1px 1px 40px 1px red' : '',\n          backgroundColor:\n            muted && isOnCurrentBeat ? '#bdbdbd' :\n            isOnCurrentBeat && active ? '#0bd3d3' :\n            isOnCurrentBeat ? '#f890e7' : isBeginningOfMeasure || !instrumentIsSelected ? 'gray' : 'white',\n          transition: 'all .2s ease-out',\n          margin: '3px',\n          cursor: 'pointer'\n        }}\n        onClick={this.activate}\n      />\n    );\n  }\n}\n","import Tone from 'tone'\nconst reverb = new Tone.JCReverb({delayTime: 0.4, wet: 0.1}).connect(Tone.Master);\nconst delay = new Tone.FeedbackDelay({delayTime: 0.5, wet: 0.1});\n\nexport const kickSynth = new Tone.MembraneSynth().toMaster()\n\nexport const snareSynth = new Tone.Synth({\n  volume: 1,\n  oscillator: {\n    type: 'fmtriangle',\n    modulationType: 'square',\n    harmonicity: 3.5\n  },\n  envelope: {\n    attack: 0.001,\n    decay: 0.06,\n    sustain: 0.004,\n    release: 0.03\n  }\n}).toMaster()\n\nexport const percSynth = new Tone.Synth({\n  volume: 1,\n  oscillator: {\n    type: 'fmtriangle',\n    modulationType: 'square',\n    harmonicity: 6.5\n  },\n  envelope: {\n    attack: 0.001,\n    decay: 0.06,\n    sustain: 0.4,\n    release: 0.5\n  }\n}).chain(delay, reverb);\npercSynth.volume.value = -20\n\n\nexport const whiteNoise = new Tone.NoiseSynth(\n  {\n    noise: {\n      type: 'white'\n    },\n    envelope: {\n      attack: 0.2 ,\n      decay: 0.9 ,\n      sustain: .02,\n      release: .1\n    }\n  }\n\n).toMaster()\n\nexport const hatSynth = new Tone.MetalSynth({\n  harmonicity: 10,\n  modulationIndex: 32,\n  resonance: 4000,\n}).toMaster()\n\n\nwhiteNoise.volume.value = -45\n\nexport const bassSynth = new Tone.MonoSynth(\n  {\n    oscillator: {\n      type: 'square'\n    },\n    filter: {\n      Q: 5,\n      type: 'lowpass',\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.9,\n      release: 0.4\n    },\n    filterEnvelope: {\n      attack: 0.001,\n      decay: 0.2,\n      sustain: 0.5,\n      release: 2,\n      baseFrequency: 80,\n      octaves: 3,\n      exponent: 2\n    }\n  }\n).toMaster()\n\nexport const pluckSynth = new Tone.PolySynth(6, Tone.Synth, {\n  oscillator : {\n\t\ttype : \"sine\"\n  },\n  envelope : {\n    \"attack\" : .02,\n\t\t\"release\" : 4\n\t}\n}).chain(delay, reverb);\n\nbassSynth.volume.value = -12\npluckSynth.volume.value = -12\nhatSynth.volume.value = -36\n","import React from 'react';\n\nexport class Mute extends React.Component {\n  constructor() {\n    super()\n    this.state={\n      active: true\n    }\n\n    this.onMuteClick = this.onMuteClick.bind(this)\n  }\n\n  onMuteClick() {\n    this.setState({ active: !this.state.active })\n    return this.props.onClick()\n  }\n\n\n  render() {\n    const { active } = this.state\n    const { flash } = this.props\n    return (\n      <div\n        style={{\n          height: '12px',\n          width: '12px',\n          marginRight: '10px',\n          border: '3px solid white',\n          borderRadius: '50%',\n          backgroundColor: active ? flash ? '#0bd3d3' : '#f890e7' : '',\n          padding: '3px',\n          transition: 'all .7s ease-out',\n          cursor: 'pointer'\n        }}\n        onClick={this.onMuteClick}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Tone from 'tone'\nimport { Square } from './Square'\nimport { kickSynth, snareSynth, hatSynth, bassSynth, pluckSynth, whiteNoise, percSynth } from './synths';\nimport { Mute } from './Mute'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state={\n      instruments: {\n        drums: {\n          kicks: Array(16).fill(false),\n          snares: Array(16).fill(false),\n          hats: Array(16).fill(false),\n          perc: Array(16).fill(false)\n        },\n        bass: {\n          c1: Array(16).fill(false),\n          c2: Array(16).fill(false),\n          c3: Array(16).fill(false),\n          c4: Array(16).fill(false)\n        },\n        synth: {\n          c1: Array(16).fill(false),\n          c2: Array(16).fill(false),\n          c3: Array(16).fill(false),\n          c4: Array(16).fill(false),\n          c5: Array(16).fill(false),\n          c6: Array(16).fill(false)\n        }\n      },\n      currentBeat: 0,\n      selectedInstrument: 'drums',\n      mutedTracks: []\n    }\n    this.onActivateSquare = this.onActivateSquare.bind(this)\n    this.onMuteClick = this.onMuteClick.bind(this)\n  }\n\n  componentDidMount() {\n    let currentBeat = 0\n    const song = (time) => {\n      currentBeat += 1\n      if (currentBeat === 16) {\n        currentBeat = 0\n      }\n      this.setState({currentBeat})\n\n      // Play Drums\n      if (!this.state.mutedTracks.includes('drums')) {\n        this.state.instruments.drums.kicks[currentBeat]\n        && kickSynth.triggerAttackRelease('c1', '10n', time)\n        if (this.state.instruments.drums.snares[currentBeat]) {\n          snareSynth.triggerAttackRelease('c4', '10n', time)\n          whiteNoise.triggerAttackRelease(\"8n\");\n        }\n        this.state.instruments.drums.hats[currentBeat]\n          && hatSynth.triggerAttackRelease('32n');\n        this.state.instruments.drums.perc[currentBeat]\n          && percSynth.triggerAttackRelease('c5', '32n');\n      }\n\n      // Play Bass\n      if (!this.state.mutedTracks.includes('bass')) {\n        this.state.instruments.bass.c1[currentBeat]\n          && bassSynth.triggerAttackRelease(\"Bb0\", \"8n\");\n        this.state.instruments.bass.c2[currentBeat]\n          && bassSynth.triggerAttackRelease(\"C1\", \"8n\");\n        this.state.instruments.bass.c3[currentBeat]\n          && bassSynth.triggerAttackRelease(\"G1\", \"8n\");\n        this.state.instruments.bass.c4[currentBeat]\n          && bassSynth.triggerAttackRelease(\"C2\", \"8n\");\n      }\n\n      // Play Synth\n      if (!this.state.mutedTracks.includes('synth')) {\n        this.state.instruments.synth.c1[currentBeat]\n          && pluckSynth.triggerAttackRelease(\"G4\", \"8n\");\n        this.state.instruments.synth.c2[currentBeat]\n          && pluckSynth.triggerAttackRelease(\"Bb4\", \"8n\");\n        this.state.instruments.synth.c3[currentBeat]\n        && pluckSynth.triggerAttackRelease(\"C5\", \"8n\");\n        this.state.instruments.synth.c4[currentBeat]\n          && pluckSynth.triggerAttackRelease(\"D5\", \"8n\");\n        this.state.instruments.synth.c5[currentBeat]\n          && pluckSynth.triggerAttackRelease(\"Eb5\", \"8n\");\n        this.state.instruments.synth.c6[currentBeat]\n          && pluckSynth.triggerAttackRelease(\"G5\", \"8n\");\n      }\n    }\n\n\n    const loopBeat = new Tone.Loop(song, '16n')\n    Tone.Transport.bpm.value = 130\n    Tone.Transport.start()\n    loopBeat.start(0)\n  }\n\n  onActivateSquare(type, index) {\n    Tone.context.resume()\n\n    const selectedInstrument = this.state.selectedInstrument\n    const instrumentStateCopy = JSON.parse(JSON.stringify(this.state.instruments))\n    const updatedState = instrumentStateCopy[selectedInstrument][type]\n    updatedState[index] = !updatedState[index]\n    this.setState({instruments: instrumentStateCopy})\n  }\n\n  onMuteClick(instrument) {\n    let mutedTracks = Object.assign([], this.state.mutedTracks)\n    if (this.state.mutedTracks.includes(instrument)) {\n      mutedTracks.splice(this.state.mutedTracks.indexOf(instrument), 1)\n    } else {\n      mutedTracks.push(instrument)\n    }\n    this.setState({ mutedTracks })\n  }\n\n  render() {\n    return (\n      <div\n        style={\n          {\n            backgroundColor: 'black',\n            color: 'white',\n            textAlign: 'right',\n            paddingRight: '20px',\n            paddingBottom: '20px'\n          }\n        }\n      >\n        <div\n          className=\"App\"\n          style={\n            {\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              textAlign: 'right',\n              minHeight: '100vh',\n              color: 'white',\n              paddingRight: '50%',\n              paddingLeft: '50%'\n            }\n          }\n        >\n          {Object.keys(this.state.instruments).map(instrument => (\n            <div style={{ display: 'flex', flexDirection: 'row',  alignItems: 'center', margin: '10px'}}>\n            <Mute\n              flash={this.state.currentBeat === 0 || !(this.state.currentBeat % 4)}\n              onClick={() => this.onMuteClick(instrument)}\n            />\n            <div style={{ display: 'flex', flexDirection: 'column'}}>\n              {Object.keys(this.state.instruments[instrument]).map(sound => {\n                const pads = this.state.instruments[instrument][sound]\n\n                return (\n                  <div\n                    style={{display: 'flex', flexDirection: 'row'}}\n                    onClick={() =>\n                      this.state.selectedInstrument !== instrument && this.setState({selectedInstrument: instrument})\n                    }\n                  >\n                    {pads.map((_drum, index)=> (\n                      <Square\n                        isBeginningOfMeasure={index === 0 || !(index % 4)}\n                        index={index}\n                        isOnCurrentBeat={this.state.currentBeat == index}\n                        onActivate={this.onActivateSquare}\n                        type={sound}\n                        instrumentIsSelected={this.state.selectedInstrument === instrument}\n                        updateSelectedInstrument={() => this.setState({selectedInstrument: instrument})}\n                        muted={this.state.mutedTracks.includes(instrument)}\n                      />\n                    ))}\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n\n          ))}\n        </div>\n        <a\n          style={\n            {textDecoration: 'none', color: 'gray', fontWeight: 'bold'}\n          }\n          href='https://github.com/PaulKleinschmidt/react-beat-sequencer'\n        >\n          Made by PaulKleinschmidt {`</>`}\n        </a>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}